{% extends "base.html" %}
{% from 'macros/ui_helpers.html' import render_authorization_code %}
{% import 'macros/ui_helpers.html' as ui %}

{% block head %}
{{ super() }}
<style>
    /* 项目编辑页面主容器顶部留白，避免被fixed导航遮挡 */
    .container.page-with-fixed-nav {
        margin-top: 72px !important; /* 72px为主导航高度+安全间距 */
    }
    @media (max-width: 991.98px) {
        .container.page-with-fixed-nav {
            margin-top: 120px !important;
        }
    }
</style>
{% endblock %}

{% block styles %}
{{ super() }}
<style>
/* 自定义搜索下拉框样式 */
.searchable-select-wrapper {
    position: relative;
}

.searchable-select-input {
    cursor: pointer;
}

.searchable-select-dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #dee2e6;
    border-top: none;
    border-radius: 0 0 0.375rem 0.375rem;
    max-height: 300px;
    overflow-y: auto;
    z-index: 1000;
    display: none;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
}

.searchable-select-wrapper.open .searchable-select-dropdown {
    display: block;
}

.searchable-select-option {
    padding: 0.5rem 0.75rem;
    cursor: pointer;
    border-bottom: 1px solid #f8f9fa;
    transition: background-color 0.15s ease-in-out;
}

.searchable-select-option:hover {
    background-color: #f8f9fa;
}

.searchable-select-option.selected {
    background-color: #e3f2fd;
    color: #1976d2;
}

.searchable-select-option.readonly {
    color: #6c757d;
    font-style: italic;
}

.searchable-select-loading {
    padding: 0.75rem;
    text-align: center;
    color: #6c757d;
}

.searchable-select-no-results {
    padding: 0.75rem;
    text-align: center;
    color: #6c757d;
    font-style: italic;
}

/* 输入框聚焦时的样式 */
.searchable-select-wrapper.open .searchable-select-input {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-bottom-color: transparent;
}

/* 项目名称搜索框样式 */
.project-name-wrapper {
    position: relative;
}

.project-name-dropdown {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #dee2e6;
    border-top: none;
    border-radius: 0 0 0.375rem 0.375rem;
    max-height: 200px;
    overflow-y: auto;
    z-index: 1000;
    display: none;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
}

.project-name-wrapper.open .project-name-dropdown {
    display: block;
}

.project-name-wrapper.open #project_name {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border-bottom-color: transparent;
}

.project-name-suggestion {
    padding: 0.5rem 0.75rem;
    cursor: default;
    border-bottom: 1px solid #f8f9fa;
    color: #6c757d;
    font-size: 0.9em;
}

.project-name-suggestion:hover {
    background-color: #f8f9fa;
}

.project-name-status {
    font-size: 0.875em;
}

.project-name-status.duplicate {
    color: #dc3545;
}

.project-name-status.available {
    color: #198754;
}

.project-name-status.checking {
    color: #6c757d;
}
</style>
{% endblock %}

{% block content %}
<!-- 添加一个隐藏的div用于调试 -->
<div style="display:none;" id="debug-info">
    {% if companies is defined %}
        <p>companies变量已定义</p>
        <ul>
            {% for company_type, company_list in companies.items() %}
                <li>{{ company_type }}: {{ company_list|length }} 家公司</li>
            {% endfor %}
        </ul>
    {% else %}
        <p>companies变量未定义!</p>
    {% endif %}
</div>

<div class="container mt-4 page-with-fixed-nav">
    <h2 class="mb-4">{% if project %}{{ _('编辑项目') }}{% else %}{{ _('添加项目') }}{% endif %}</h2>

    <!-- 授权编号提示框 -->
    {% if project %}
    <div class="alert alert-light mb-4">
        <div class="row align-items-center">
            <div class="col-auto">
                <strong>{{ _('授权编号') }}：</strong>
            </div>
            <div class="col">
                {% if project.authorization_code %}
                    {{ render_authorization_code(project.authorization_code, project.project_type) }}
                {% else %}
                    {{ render_authorization_code(None) }}
                {% endif %}
            </div>
        </div>
    </div>
    {% endif %}

    <form method="POST">
        <input type="hidden" name="csrf_token" value="{{ csrf_token() }}">
        <!-- 项目信息卡片 -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">{{ _('项目信息') }}</h5>
            </div>
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-md-6">
                        <label for="project_name" class="form-label mb-2">项目名称</label>
                        <div class="project-name-wrapper position-relative">
                            <input type="text" class="form-control" id="project_name" name="project_name" 
                                   value="{{ project.project_name if project else '' }}" 
                                   data-current-project-id="{{ project.id if project else '' }}"
                                   placeholder="输入项目名称..." autocomplete="off" required>
                            <div class="project-name-dropdown">
                                <!-- 搜索建议将在这里显示 -->
                            </div>
                            <div class="project-name-status mt-1">
                                <!-- 重复检查状态将在这里显示 -->
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label for="report_time" class="form-label mb-2">报备日期</label>
                        <input type="date" class="form-control {% if project %}bg-light{% endif %}" id="report_time" name="report_time" value="{{ project.formatted_report_time if project else '' }}" {% if project %}readonly{% endif %}>
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6">
                        <label for="report_source" class="form-label mb-2">报备来源</label>
                        <select class="form-select" id="report_source" name="report_source">
                            <option value="">请选择报备来源</option>
                            {% for k, v in REPORT_SOURCE_OPTIONS %}
                            <option value="{{ k }}" {% if project and project.report_source == k %}selected{% endif %}>{{ v }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="project_type" class="form-label mb-2">项目类型</label>
                        <select class="form-select" id="project_type" name="project_type" {% if project and project.authorization_code %}disabled{% endif %}>
                            <option value="">-- 请选择项目类型 --</option>
                            {% for k, v in PROJECT_TYPE_OPTIONS %}
                            <option value="{{ k }}" {% if project and project.project_type == k %}selected{% endif %}>{{ v }}</option>
                            {% endfor %}
                        </select>
                        {% if project and project.authorization_code %}
                        <input type="hidden" name="project_type" value="{{ project.project_type }}">
                        <small class="text-muted">
                            <i class="fas fa-lock me-1"></i>项目类型已锁定（已有授权编号：{{ project.authorization_code }}）
                        </small>
                        {% endif %}
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6">
                        <label for="product_situation" class="form-label mb-2">品牌情况</label>
                        <select class="form-select" id="product_situation" name="product_situation">
                            <option value="">请选择品牌情况</option>
                            {% for k, v in PRODUCT_SITUATION_OPTIONS %}
                            <option value="{{ k }}" {% if project and project.product_situation == k %}selected{% endif %}>{{ v }}</option>
                            {% endfor %}
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="current_stage" class="form-label mb-2">当前阶段</label>
                        <input type="text" class="form-control" id="current_stage" name="current_stage_display" value="{{ project_stage_label(project.current_stage) if project and project.current_stage else '' }}" readonly>
                        <input type="hidden" name="current_stage" value="{{ project.current_stage if project else '' }}">
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6">
                        <label for="quotation_customer" class="form-label mb-2">报价（元）</label>
                        <div class="input-group quotation-wrapper">
                            <input type="text" class="form-control" id="quotation_customer" name="quotation_customer"
                                value="{% if project and project.quotation_customer %}{{ '{:,.2f}'.format(project.quotation_customer) }}{% endif %}"
                                placeholder="选择报价单或直接输入金额"
                                oninput="formatAmount(this)"
                                style="border-right: none;" readonly>
                            <button class="form-control dropdown-toggle quotation-dropdown-btn" type="button"
                                    onclick="toggleQuotationDropdown()"
                                    style="max-width: 40px; border-left: none; background-color: white;">
                                <i class="fas fa-chevron-down"></i>
                            </button>
                            <div class="quotation-dropdown" id="quotationDropdown">
                                {% if project.quotations %}
                                    {% for quotation in project.quotations %}
                                    <div class="quotation-item"
                                         onclick="selectQuotation(`{{ quotation.quotation_number }}`, `{{ '{:,.2f}'.format(quotation.amount) if quotation.amount else '0.00' }}`, `{{ quotation.project.end_user or '未知公司' }}`, `{{ quotation.updated_at.strftime('%Y-%m-%d') if quotation.updated_at else '' }}`)">
                                        <div class="d-flex align-items-center px-2">
                                            <div class="quotation-col" style="width: 140px;">
                                                <span class="badge bg-primary quotation-number">{{ quotation.quotation_number }}</span>
                                            </div>
                                            <div class="quotation-col text-truncate" style="width: 200px;" title="{{ quotation.project.end_user or '未知公司' }}">
                                                {{ quotation.project.end_user or '未知公司' }}
                                            </div>
                                            <div class="quotation-col text-end" style="width: 140px;">
                                                {{ '{:,.2f}'.format(quotation.amount) if quotation.amount else '0.00' }}
                                            </div>
                                            <div class="quotation-col" style="width: 120px;">
                                                {{ quotation.updated_at.strftime('%Y-%m-%d') if quotation.updated_at else '' }}
                                            </div>
                                        </div>
                                    </div>
                                    {% if not loop.last %}
                                    <div class="quotation-divider"></div>
                                    {% endif %}
                                    {% endfor %}
                                {% else %}
                                    <div class="quotation-item text-muted">暂无报价单</div>
                                {% endif %}
                            </div>
                        </div>
                        <small class="text-muted mt-1" id="quotation_info"></small>
                    </div>
                    <div class="col-md-6">
                        <label for="delivery_forecast" class="form-label mb-2">出货预测日期</label>
                        <input type="date" class="form-control" id="delivery_forecast" name="delivery_forecast" value="{{ project.formatted_delivery_forecast if project else '' }}">
                    </div>
                </div>
                
                <!-- 销售负责人和行业字段 -->
                <div class="row mb-4">
                    <div class="col-md-6">
                        <label for="vendor_sales_manager_id" class="form-label mb-2">厂商销售负责人</label>
                        <select class="form-select" id="vendor_sales_manager_id" name="vendor_sales_manager_id"
                                data-current-value="{{ project.vendor_sales_manager_id if project else '' }}">
                            <option value="">请选择厂商销售负责人</option>
                            <!-- 这里将通过JavaScript动态加载厂商用户 -->
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label for="industry" class="form-label mb-2">{{ _('项目行业') }} <span class="text-danger">*</span></label>
                        <select class="form-select" id="industry" name="industry" required>
                            <option value="">{{ _('请选择项目行业') }}</option>
                            {% for value, label in INDUSTRY_OPTIONS %}
                            <option value="{{ value }}" {% if project and project.industry == value %}selected{% endif %}>{{ label }}</option>
                            {% endfor %}
                        </select>
                    </div>
                </div>
            </div>
        </div>

        <!-- 参与单位卡片 -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">参与单位</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <!-- 直接用户 -->
                    <div class="col-md-6 mb-3">
                        <label for="direct_user" class="form-label">直接用户</label>
                        <div class="searchable-select-wrapper" data-type="user" data-name="end_user" data-preselected="{{ project.end_user if project else '' }}">
                            <input type="text" class="form-control searchable-select-input" placeholder="请选择或搜索直接用户" autocomplete="off">
                            <input type="hidden" name="end_user" class="searchable-select-value">
                            <div class="searchable-select-dropdown" style="display: none;">
                                <!-- 内容将通过JavaScript动态加载 -->
                            </div>
                        </div>
                    </div>

                    <!-- 设计院及顾问 -->
                    <div class="col-md-6 mb-3">
                        <label for="design_issues" class="form-label">设计院及顾问</label>
                        <div class="searchable-select-wrapper" data-type="designer" data-name="design_issues" data-preselected="{{ project.design_issues if project else '' }}">
                            <input type="text" class="form-control searchable-select-input" placeholder="请选择或搜索设计院及顾问" autocomplete="off">
                            <input type="hidden" name="design_issues" class="searchable-select-value">
                            <div class="searchable-select-dropdown" style="display: none;">
                                <!-- 内容将通过JavaScript动态加载 -->
                            </div>
                        </div>
                    </div>

                    <!-- 总承包单位 -->
                    <div class="col-md-6 mb-3">
                        <label for="contractor" class="form-label">总承包单位</label>
                        <div class="searchable-select-wrapper" data-type="contractor" data-name="contractor" data-preselected="{{ project.contractor if project else '' }}">
                            <input type="text" class="form-control searchable-select-input" placeholder="请选择或搜索总承包单位" autocomplete="off">
                            <input type="hidden" name="contractor" class="searchable-select-value">
                            <div class="searchable-select-dropdown" style="display: none;">
                                <!-- 内容将通过JavaScript动态加载 -->
                            </div>
                        </div>
                    </div>

                    <!-- 系统集成商 -->
                    <div class="col-md-6 mb-3">
                        <label for="system_integrator" class="form-label">系统集成商</label>
                        <div class="searchable-select-wrapper" data-type="integrator" data-name="system_integrator" data-preselected="{{ project.system_integrator if project else '' }}">
                            <input type="text" class="form-control searchable-select-input" placeholder="请选择或搜索系统集成商" autocomplete="off">
                            <input type="hidden" name="system_integrator" class="searchable-select-value">
                            <div class="searchable-select-dropdown" style="display: none;">
                                <!-- 内容将通过JavaScript动态加载 -->
                            </div>
                        </div>
                    </div>

                    <!-- 经销商 -->
                    <div class="col-md-6 mb-3">
                        <label for="dealer" class="form-label">经销商</label>
                        <div class="searchable-select-wrapper" data-type="dealer" data-name="dealer" data-preselected="{{ project.dealer if project else '' }}">
                            <input type="text" class="form-control searchable-select-input" placeholder="请选择或搜索经销商" autocomplete="off">
                            <input type="hidden" name="dealer" class="searchable-select-value">
                            <div class="searchable-select-dropdown" style="display: none;">
                                <!-- 内容将通过JavaScript动态加载 -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 阶段说明卡片 -->
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">阶段说明</h5>
            </div>
            <div class="card-body">
                <div class="mb-4">
                    <label for="stage_description" class="form-label mb-2">当前阶段情况说明</label>
                    <textarea class="form-control" id="stage_description" name="stage_description" rows="3">{{ project.stage_description if project else '' }}</textarea>
                </div>

                <div class="mb-4 d-flex justify-content-end gap-2">
                    {{ ui.render_button('返回列表', href=url_for('project.list_projects'), color='secondary') }}
                    {{ ui.render_button('保存', type='submit', color='primary') }}
                </div>
            </div>
        </div>
    </form>
</div>

<!-- 添加日期格式化脚本 -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    function formatDateInput(input) {
        input.addEventListener('input', function(e) {
            let value = e.target.value;
            if (value) {
                let date = new Date(value);
                let year = date.getFullYear();
                let month = String(date.getMonth() + 1).padStart(2, '0');
                let day = String(date.getDate()).padStart(2, '0');
                e.target.value = `${year}-${month}-${day}`;
            }
        });
    }

    let dateInputs = document.querySelectorAll('input[type="date"]');
    dateInputs.forEach(formatDateInput);
});

function toggleQuotationDropdown() {
    const wrapper = document.querySelector('.quotation-wrapper');
    const dropdown = document.getElementById('quotationDropdown');

    wrapper.classList.toggle('show');
    dropdown.classList.toggle('show');
}

function selectQuotation(number, amount, company, date) {
    const quotationCustomer = document.getElementById('quotation_customer');
    quotationCustomer.value = amount;

    const quotationInfo = document.getElementById('quotation_info');
    quotationInfo.innerHTML = `<span class="badge bg-primary">${number}</span> ${company} | ${date}`;

    // 关闭下拉菜单
    toggleQuotationDropdown();
}

// 点击外部关闭下拉菜单
document.addEventListener('click', function(e) {
    const wrapper = document.querySelector('.quotation-wrapper');
    const dropdown = document.getElementById('quotationDropdown');

    if (!wrapper.contains(e.target)) {
        wrapper.classList.remove('show');
        dropdown.classList.remove('show');
    }
});

// 保留原有的金额格式化函数
function formatAmount(input) {
    let value = input.value.replace(/[^\d.]/g, '');

    let parts = value.split('.');
    if (parts.length > 2) {
        parts = [parts[0], parts.slice(1).join('')];
        value = parts.join('.');
    }

    if (parts.length > 1) {
        value = parts[0] + '.' + parts[1].slice(0, 2);
    }

    let intPart = parts[0];
    let decPart = parts.length > 1 ? '.' + parts[1] : '';
    intPart = intPart.replace(/\B(?=(\d{3})+(?!\d))/g, ',');

    input.value = intPart + decPart;
}

// 页面加载时格式化金额
document.addEventListener('DOMContentLoaded', function() {
    let amountInput = document.getElementById('quotation_customer');
    if (amountInput && amountInput.value) {
        formatAmount(amountInput);
    }
});

document.addEventListener('DOMContentLoaded', function() {
    // 简化版拼音转换表
    const pinyinMap = {
        '阿': 'a', '啊': 'a', '安': 'an', '按': 'an', '暗': 'an',
        '八': 'ba', '白': 'bai', '百': 'bai', '拜': 'bai', '班': 'ban', '办': 'ban', '半': 'ban',
        '帮': 'bang', '包': 'bao', '报': 'bao', '北': 'bei', '被': 'bei', '本': 'ben',
        '比': 'bi', '必': 'bi', '边': 'bian', '变': 'bian', '表': 'biao', '别': 'bie',
        '并': 'bing', '不': 'bu', '部': 'bu',
        '才': 'cai', '参': 'can', '草': 'cao', '层': 'ceng', '查': 'cha', '产': 'chan',
        '长': 'chang', '常': 'chang', '场': 'chang', '车': 'che', '成': 'cheng', '城': 'cheng',
        '出': 'chu', '初': 'chu', '处': 'chu', '川': 'chuan', '传': 'chuan', '创': 'chuang',
        '从': 'cong', '村': 'cun',
        '大': 'da', '打': 'da', '带': 'dai', '单': 'dan', '当': 'dang', '道': 'dao',
        '得': 'de', '的': 'de', '地': 'di', '第': 'di', '点': 'dian', '电': 'dian',
        '定': 'ding', '东': 'dong', '动': 'dong', '都': 'du', '度': 'du', '对': 'dui',
        '多': 'duo',
        '二': 'er',
        '发': 'fa', '法': 'fa', '反': 'fan', '方': 'fang', '房': 'fang', '放': 'fang',
        '非': 'fei', '分': 'fen', '风': 'feng', '服': 'fu', '府': 'fu', '副': 'fu',
        '该': 'gai', '改': 'gai', '感': 'gan', '干': 'gan', '刚': 'gang', '高': 'gao',
        '告': 'gao', '个': 'ge', '给': 'gei', '根': 'gen', '更': 'geng', '工': 'gong',
        '公': 'gong', '功': 'gong', '共': 'gong', '关': 'guan', '管': 'guan', '光': 'guang',
        '广': 'guang', '国': 'guo', '过': 'guo',
        '还': 'hai', '海': 'hai', '汉': 'han', '好': 'hao', '号': 'hao', '和': 'he',
        '合': 'he', '河': 'he', '黑': 'hei', '很': 'hen', '红': 'hong', '后': 'hou',
        '湖': 'hu', '花': 'hua', '华': 'hua', '化': 'hua', '话': 'hua', '环': 'huan',
        '回': 'hui', '会': 'hui', '活': 'huo', '火': 'huo',
        '机': 'ji', '基': 'ji', '及': 'ji', '集': 'ji', '几': 'ji', '计': 'ji',
        '记': 'ji', '技': 'ji', '际': 'ji', '加': 'jia', '家': 'jia', '价': 'jia',
        '间': 'jian', '见': 'jian', '建': 'jian', '江': 'jiang', '将': 'jiang', '交': 'jiao',
        '教': 'jiao', '接': 'jie', '结': 'jie', '解': 'jie', '介': 'jie', '金': 'jin',
        '进': 'jin', '近': 'jin', '京': 'jing', '经': 'jing', '精': 'jing', '就': 'jiu',
        '九': 'jiu', '局': 'ju', '具': 'ju', '决': 'jue',
        '开': 'kai', '看': 'kan', '可': 'ke', '科': 'ke', '空': 'kong', '口': 'kou',
        '快': 'kuai',
        '来': 'lai', '老': 'lao', '了': 'le', '类': 'lei', '里': 'li', '理': 'li',
        '力': 'li', '立': 'li', '利': 'li', '连': 'lian', '联': 'lian', '两': 'liang',
        '量': 'liang', '林': 'lin', '流': 'liu', '六': 'liu', '龙': 'long', '路': 'lu',
        '绿': 'lv',
        '马': 'ma', '吗': 'ma', '买': 'mai', '卖': 'mai', '满': 'man', '没': 'mei',
        '美': 'mei', '每': 'mei', '门': 'men', '们': 'men', '民': 'min', '明': 'ming',
        '名': 'ming', '目': 'mu',
        '那': 'na', '哪': 'na', '南': 'nan', '难': 'nan', '内': 'nei', '能': 'neng',
        '你': 'ni', '年': 'nian', '宁': 'ning', '农': 'nong',
        '欧': 'ou',
        '派': 'pai', '跑': 'pao', '培': 'pei', '朋': 'peng', '片': 'pian', '平': 'ping',
        '七': 'qi', '其': 'qi', '起': 'qi', '气': 'qi', '千': 'qian', '前': 'qian',
        '强': 'qiang', '青': 'qing', '清': 'qing', '情': 'qing', '请': 'qing', '区': 'qu',
        '全': 'quan', '群': 'qun',
        '然': 'ran', '让': 'rang', '人': 'ren', '认': 'ren', '日': 'ri', '如': 'ru',
        '三': 'san', '色': 'se', '山': 'shan', '商': 'shang', '上': 'shang', '少': 'shao',
        '社': 'she', '设': 'she', '深': 'shen', '什': 'shen', '生': 'sheng', '省': 'sheng',
        '十': 'shi', '时': 'shi', '实': 'shi', '市': 'shi', '事': 'shi', '是': 'shi',
        '手': 'shou', '首': 'shou', '受': 'shou', '书': 'shu', '数': 'shu', '水': 'shui',
        '说': 'shuo', '四': 'si', '司': 'si', '思': 'si', '所': 'suo',
        '他': 'ta', '她': 'ta', '它': 'ta', '太': 'tai', '台': 'tai', '谈': 'tan',
        '特': 'te', '天': 'tian', '田': 'tian', '条': 'tiao', '听': 'ting', '通': 'tong',
        '同': 'tong', '头': 'tou', '图': 'tu', '土': 'tu',
        '外': 'wai', '完': 'wan', '万': 'wan', '王': 'wang', '网': 'wang', '为': 'wei',
        '位': 'wei', '文': 'wen', '问': 'wen', '我': 'wo', '无': 'wu', '五': 'wu',
        '物': 'wu',
        '西': 'xi', '系': 'xi', '下': 'xia', '先': 'xian', '现': 'xian', '县': 'xian',
        '想': 'xiang', '向': 'xiang', '项': 'xiang', '小': 'xiao', '校': 'xiao', '新': 'xin',
        '心': 'xin', '信': 'xin', '星': 'xing', '行': 'xing', '形': 'xing', '学': 'xue',
        '也': 'ye', '一': 'yi', '以': 'yi', '用': 'yong', '有': 'you', '又': 'you',
        '于': 'yu', '与': 'yu', '元': 'yuan', '原': 'yuan', '院': 'yuan', '月': 'yue',
        '在': 'zai', '再': 'zai', '早': 'zao', '怎': 'zen', '增': 'zeng', '展': 'zhan',
        '站': 'zhan', '张': 'zhang', '长': 'zhang', '找': 'zhao', '这': 'zhe', '着': 'zhe',
        '真': 'zhen', '正': 'zheng', '政': 'zheng', '之': 'zhi', '知': 'zhi', '直': 'zhi',
        '制': 'zhi', '中': 'zhong', '重': 'zhong', '主': 'zhu', '住': 'zhu', '注': 'zhu',
        '专': 'zhuan', '转': 'zhuan', '准': 'zhun', '资': 'zi', '自': 'zi', '总': 'zong',
        '走': 'zou', '组': 'zu', '最': 'zui', '作': 'zuo', '做': 'zuo'
    };

    // 拼音转换函数
    function toPinyin(str) {
        return str.split('').map(char => pinyinMap[char] || char).join('');
    }

    // 搜索匹配函数
    function matchesSearch(text, searchTerm) {
        if (!searchTerm) return true;
        
        const lowerSearchTerm = searchTerm.toLowerCase();
        const lowerText = text.toLowerCase();
        
        // 直接文本匹配
        if (lowerText.includes(lowerSearchTerm)) {
            return true;
        }
        
        // 拼音匹配
        const pinyinText = toPinyin(text).toLowerCase();
        if (pinyinText.includes(lowerSearchTerm)) {
            return true;
        }
        
        // 拼音首字母匹配
        const pinyinInitials = text.split('').map(char => {
            const pinyin = pinyinMap[char];
            return pinyin ? pinyin[0] : char;
        }).join('').toLowerCase();
        
        if (pinyinInitials.includes(lowerSearchTerm)) {
            return true;
        }
        
        return false;
    }

    // 自定义搜索下拉框类
    class SearchableSelect {
        constructor(wrapper) {
            this.wrapper = wrapper;
            this.input = wrapper.querySelector('.searchable-select-input');
            this.hiddenInput = wrapper.querySelector('.searchable-select-value');
            this.dropdown = wrapper.querySelector('.searchable-select-dropdown');
            this.type = wrapper.dataset.type;
            this.name = wrapper.dataset.name;
            this.preselected = wrapper.dataset.preselected;
            this.companies = [];
            this.filteredCompanies = [];
            this.isOpen = false;
            
            this.init();
        }
        
        async init() {
            await this.loadCompanies();
            this.bindEvents();
            this.setPreselectedValue();
        }
        
        async loadCompanies() {
            try {
                // 不显示加载状态，静默加载数据
                const response = await fetch(`/api/companies/${this.type}`);
            const data = await response.json();
                this.companies = data || [];
                this.filteredCompanies = [...this.companies];
                // 清空下拉框内容，保持关闭状态
                this.dropdown.innerHTML = '';
                this.close(); // 确保下拉框是关闭的
            } catch (error) {
                console.error(`加载${this.type}类型公司数据失败:`, error);
                // 错误时也不显示，保持静默
            }
        }
        
        bindEvents() {
            // 输入框点击事件 - 只有在有内容时才打开
            this.input.addEventListener('click', () => {
                if (this.input.value.trim()) {
                    this.filter(this.input.value);
                    if (this.filteredCompanies.length > 0) {
                        this.open();
                    }
                }
            });
            
            // 输入框聚焦事件 - 不自动打开
            this.input.addEventListener('focus', () => {
                // 不自动打开下拉框
            });
            
            // 输入事件 - 实时搜索
            this.input.addEventListener('input', (e) => {
                const searchTerm = e.target.value;
                if (searchTerm.trim()) {
                    this.filter(searchTerm);
                    if (this.filteredCompanies.length > 0) {
                        this.open();
                    } else {
                        this.close();
                    }
                } else {
                    this.close();
                    // 清空隐藏输入框
                    this.hiddenInput.value = '';
                }
            });
            
            // 键盘事件
            this.input.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') {
                    this.close();
                } else if (e.key === 'ArrowDown') {
                    e.preventDefault();
                    this.selectNext();
                } else if (e.key === 'ArrowUp') {
                    e.preventDefault();
                    this.selectPrevious();
                } else if (e.key === 'Enter') {
                    e.preventDefault();
                    this.selectCurrent();
                }
            });
            
            // 失去焦点时关闭下拉框
            this.blurHandler = (e) => {
                // 延迟关闭，允许点击选项
                setTimeout(() => {
                    this.close();
                }, 150);
            };
            this.input.addEventListener('blur', this.blurHandler);
            
            // 点击外部关闭
            document.addEventListener('click', (e) => {
                if (!this.wrapper.contains(e.target)) {
                    this.close();
                }
            });
        }
        
        filter(searchTerm) {
            this.filteredCompanies = this.companies.filter(company => {
                const displayText = this.getDisplayText(company);
                return matchesSearch(displayText, searchTerm);
            });
            this.renderOptions();
        }
        
        getDisplayText(company) {
            let displayText = company.name;
            if (company.owner_name && company.owner_name !== "未指定") {
                displayText += ` ${company.owner_name}`;
            }
            return displayText;
        }
        
        renderOptions() {
            this.dropdown.innerHTML = '';
            
            if (this.filteredCompanies.length === 0) {
                this.dropdown.innerHTML = '<div class="searchable-select-no-results">未找到匹配的选项</div>';
                return;
            }
            
            this.filteredCompanies.forEach((company, index) => {
                const option = document.createElement('div');
                option.className = 'searchable-select-option';
                option.dataset.index = index;
                option.dataset.value = company.name;
                
                // 构建显示文本
                let displayText = company.name;
                if (company.owner_name && company.owner_name !== "未指定") {
                    displayText += ` | ${company.owner_name}`;
                }
                if (!company.is_readable) {
                    displayText += ' [只读]';
                    option.classList.add('readonly');
                }
                
                option.textContent = displayText;
                
                // 点击选择
                option.addEventListener('click', () => {
                    this.selectOption(company);
                });
                
                this.dropdown.appendChild(option);
            });
        }
        
        selectOption(company) {
            let displayText = company.name;
            if (company.owner_name && company.owner_name !== "未指定") {
                displayText += ` | ${company.owner_name}`;
            }
            if (!company.is_readable) {
                displayText += ' [只读]';
            }
            
            this.input.value = displayText;
            this.hiddenInput.value = company.name;
            
            // 立即关闭下拉框
            this.close();
            
            // 移除事件监听器避免重复触发
            this.input.removeEventListener('blur', this.blurHandler);
            
            // 确保移除focus状态，避免重新打开
            this.input.blur();
            
            // 重新添加blur事件监听器
            setTimeout(() => {
                this.input.addEventListener('blur', this.blurHandler);
            }, 100);
        }
        
        open() {
            this.isOpen = true;
            this.wrapper.classList.add('open');
        }
        
        close() {
            this.isOpen = false;
            this.wrapper.classList.remove('open');
        }
        
        showLoading() {
            // 只有在下拉框打开时才显示加载状态
            if (this.isOpen) {
                this.dropdown.innerHTML = '<div class="searchable-select-loading">加载中...</div>';
            }
        }
        
        showError() {
            // 只有在下拉框打开时才显示错误状态
            if (this.isOpen) {
                this.dropdown.innerHTML = '<div class="searchable-select-no-results">加载失败</div>';
            }
        }
        
        setPreselectedValue() {
            if (this.preselected) {
                const company = this.companies.find(c => c.name === this.preselected);
                if (company) {
                    // 直接设置值，不触发selectOption的打开逻辑
                    let displayText = company.name;
                    if (company.owner_name && company.owner_name !== "未指定") {
                        displayText += ` | ${company.owner_name}`;
                    }
                    if (!company.is_readable) {
                        displayText += ' [只读]';
                    }
                    
                    this.input.value = displayText;
                    this.hiddenInput.value = company.name;
                    
                    // 确保下拉框是关闭状态
                    this.close();
                }
            }
        }
        
        selectNext() {
            // 键盘导航功能可以后续添加
        }
        
        selectPrevious() {
            // 键盘导航功能可以后续添加
        }
        
        selectCurrent() {
            // 键盘导航功能可以后续添加
        }
    }
    
    // 初始化所有搜索下拉框
    const wrappers = document.querySelectorAll('.searchable-select-wrapper');
    const searchableSelects = [];
    wrappers.forEach(wrapper => {
        const searchableSelect = new SearchableSelect(wrapper);
        searchableSelects.push(searchableSelect);
    });
    
    // 确保所有下拉框在初始化完成后都是关闭状态
    setTimeout(() => {
        searchableSelects.forEach(select => {
            select.close();
        });
        // 同时移除任何可能的open类
        document.querySelectorAll('.searchable-select-wrapper').forEach(wrapper => {
            wrapper.classList.remove('open');
        });
        // 确保项目名称下拉框也是关闭状态
        document.querySelectorAll('.project-name-wrapper').forEach(wrapper => {
            wrapper.classList.remove('open');
        });
    }, 100);
    
    // 项目名称搜索和重复检查功能
    class ProjectNameSearch {
        constructor() {
            this.input = document.getElementById('project_name');
            this.wrapper = document.querySelector('.project-name-wrapper');
            this.dropdown = document.querySelector('.project-name-dropdown');
            this.status = document.querySelector('.project-name-status');
            this.currentProjectId = this.input.dataset.currentProjectId;
            this.searchTimeout = null;
            this.originalValue = this.input.value;
            
            this.init();
        }
        
        init() {
            this.bindEvents();
        }
        
        bindEvents() {
            // 输入事件
            this.input.addEventListener('input', (e) => {
                const value = e.target.value.trim();
                
                // 清除之前的搜索定时器
                clearTimeout(this.searchTimeout);
                
                if (value === '') {
                    this.hideDropdown();
                    this.clearStatus();
                    return;
                }
                
                // 设置搜索延迟，避免频繁请求
                this.searchTimeout = setTimeout(() => {
                    this.searchProjects(value);
                }, 300);
            });
            
            // 聚焦事件 - 不自动搜索
            this.input.addEventListener('focus', () => {
                // 不自动搜索，避免默认展开下拉框
                this.hideDropdown();
            });
            
            // 失焦事件
            this.input.addEventListener('blur', () => {
                setTimeout(() => {
                    this.hideDropdown();
                }, 200);
            });
            
            // 键盘事件
            this.input.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') {
                    this.hideDropdown();
                    this.input.blur();
                }
            });
            
            // 点击外部关闭
            document.addEventListener('click', (e) => {
                if (!this.wrapper.contains(e.target)) {
                    this.hideDropdown();
                }
            });
            
            // 表单提交前检查
            const form = this.input.closest('form');
            if (form) {
                form.addEventListener('submit', (e) => {
                    if (!this.validateProjectName()) {
                        e.preventDefault();
                        this.showStatus('项目名称重复，无法保存！', 'duplicate');
                        this.input.focus();
                    }
                });
            }
        }
        
        async searchProjects(query) {
            try {
                this.showStatus('检查中...', 'checking');
                
                const params = new URLSearchParams({
                    q: query
                });
                
                if (this.currentProjectId) {
                    params.append('exclude_id', this.currentProjectId);
                }
                
                const response = await fetch(`/api/projects/search?${params}`);
                const data = await response.json();
                
                this.renderResults(data);
                
        } catch (error) {
                console.error('搜索项目失败:', error);
                this.showStatus('搜索失败', 'duplicate');
            }
        }
        
        renderResults(data) {
            const { results, has_exact_match, query } = data;
            
            // 更新状态显示
            if (has_exact_match) {
                this.showStatus('⚠️ 项目名称已存在', 'duplicate');
            } else {
                this.showStatus('✓ 项目名称可用', 'available');
            }
            
            // 显示搜索建议
            this.dropdown.innerHTML = '';
            
            if (results.length > 0) {
                const header = document.createElement('div');
                header.className = 'project-name-suggestion';
                header.style.fontWeight = 'bold';
                header.textContent = '相似的项目名称：';
                this.dropdown.appendChild(header);
                
                results.forEach(project => {
                    const suggestion = document.createElement('div');
                    suggestion.className = 'project-name-suggestion';
                    
                    // 构建显示文本：项目名称 + 拥有者信息
                    let displayText = project.name;
                    if (project.owner_name && project.owner_name !== "未指定") {
                        displayText += ` | ${project.owner_name}`;
                    }
                    
                    if (project.is_exact_match) {
                        suggestion.style.color = '#dc3545';
                        suggestion.innerHTML = `${displayText} <small>(重复)</small>`;
                    } else {
                        suggestion.textContent = displayText;
                    }
                    
                    this.dropdown.appendChild(suggestion);
                });
                
                this.showDropdown();
            } else {
                this.hideDropdown();
            }
        }
        
        showDropdown() {
            this.wrapper.classList.add('open');
        }
        
        hideDropdown() {
            this.wrapper.classList.remove('open');
        }
        
        showStatus(message, type) {
            this.status.textContent = message;
            this.status.className = `project-name-status ${type}`;
        }
        
        clearStatus() {
            this.status.textContent = '';
            this.status.className = 'project-name-status';
        }
        
        validateProjectName() {
            const currentValue = this.input.value.trim();
            
            // 如果值没有改变，允许保存
            if (currentValue === this.originalValue) {
                return true;
            }
            
            // 检查是否显示重复状态
            return !this.status.classList.contains('duplicate');
        }
    }
    
    // 初始化项目名称搜索
    new ProjectNameSearch();
    
    // 修复参与单位输入框默认展开的问题
    // 立即确保页面加载时所有下拉框都是关闭状态
    document.querySelectorAll('.searchable-select-wrapper').forEach(wrapper => {
        wrapper.classList.remove('open');
    });
    // 确保项目名称下拉框也是关闭状态
    document.querySelectorAll('.project-name-wrapper').forEach(wrapper => {
        wrapper.classList.remove('open');
    });
    
    // 保留销售负责人加载函数
    loadSalesManagers();
});

// 加载销售负责人数据的函数
async function loadSalesManagers() {
    try {
        // 使用标准的用户层级API获取所有用户
        const response = await fetch('/api/users/hierarchical');
        const data = await response.json();
        
        const vendorSelect = document.getElementById('vendor_sales_manager_id');
        
        vendorSelect.innerHTML = '<option value="">请选择厂商销售负责人</option>';
        
        if (data.success && data.data) {
            // 按企业分组用户，并根据企业名称过滤
            data.data.forEach(company => {
                const isVendorCompany = company.is_vendor === true;
                
                if (company.users && company.users.length > 0) {
                    if (isVendorCompany) {
                        // 厂商下拉菜单：不显示企业级，只显示部门级和账户（账户包括真实姓名和角色）
                        company.users.forEach(user => {
                            const option = document.createElement('option');
                            option.value = user.id;
                            // 使用真实姓名和中文角色显示
                            const displayName = user.real_name || user.name;
                            const roleDisplay = user.role_display || user.role;
                            option.textContent = `${displayName} (${roleDisplay})`;
                            vendorSelect.appendChild(option);
                        });
                    }
                }
            });
        }
        
        // 设置当前选中值（避免模板语法错误）
        setTimeout(() => {
            const currentVendorManagerId = vendorSelect.getAttribute('data-current-value');
            
            if (currentVendorManagerId && currentVendorManagerId !== '') {
                vendorSelect.value = currentVendorManagerId;
            }
        }, 100);
        
    } catch (error) {
        console.error('加载销售负责人数据失败:', error);
    }
}
</script>

<style>
/* 统一下拉菜单样式 */
.form-select {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 16px 12px;
    padding-right: 2.25rem;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

.form-select-wrapper {
    position: relative;
    flex: 0 0 auto;
}

.form-select-wrapper .form-select {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-left: 0;
    padding-right: 2.25rem;
    min-width: 120px;
}

/* 报价单选择器样式 */
#quotation_selector {
    border-color: #ced4da;
    background-color: #fff;
}

#quotation_selector:hover {
    background-color: #f8f9fa;
}

#quotation_selector option {
    padding: 8px 12px;
}

/* 报价单信息样式 */
#quotation_info {
    margin-top: 0.5rem;
    display: block;
}

#quotation_info .badge {
    font-size: 0.9em;
    padding: 5px 10px;
    margin-right: 8px;
}

/* 横向布局的报价单列表 */
.quotation-list {
    display: flex;
    flex-wrap: nowrap;
    overflow-x: auto;
    padding: 10px 0;
    gap: 10px;
    scrollbar-width: thin;
    scrollbar-color: #888 #f1f1f1;
}

.quotation-list::-webkit-scrollbar {
    height: 6px;
}

.quotation-list::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
}

.quotation-list::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 3px;
}

.quotation-list::-webkit-scrollbar-thumb:hover {
    background: #555;
}

.quotation-item {
    flex: 0 0 auto;
    width: 280px;
    padding: 12px;
    border: 1px solid #dee2e6;
    border-radius: 6px;
    background-color: #fff;
    transition: all 0.2s ease;
}

.quotation-item:hover {
    border-color: #6c757d;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.quotation-dropdown-btn {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    padding-left: 8px;
    padding-right: 8px;
}

.quotation-dropdown-btn:hover,
.quotation-dropdown-btn:focus {
    background-color: #f8f9fa !important;
    border-color: #ced4da;
}

.quotation-dropdown-btn:focus {
    box-shadow: none;
}

.quotation-dropdown-btn i {
    font-size: 12px;
    color: #6c757d;
}

.dropdown-menu {
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.dropdown-item {
    padding: 10px 16px;
    white-space: nowrap;
}

.dropdown-item:hover {
    background-color: #f8f9fa;
}

.dropdown-divider {
    margin: 0;
}

.badge {
    font-size: 0.9em;
    padding: 5px 10px;
}

/* 列对齐样式 */
.col-field {
    padding: 0;
    box-sizing: border-box;
}

/* 隐藏输入框的右边框 */
.input-group .form-control:focus {
    border-right-color: transparent;
    box-shadow: none;
}

/* 确保下拉按钮和输入框的边框颜色一致 */
.input-group .form-control:focus + .quotation-dropdown-btn {
    border-left-color: transparent;
    border-color: #86b7fe;
}

/* 文本溢出处理 */
.text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/* 下拉菜单打开时的输入框样式 */
.dropdown.show .form-control,
.dropdown.show .quotation-dropdown-btn {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

.dropdown-menu.show {
    border-top: none;
}

.quotation-wrapper {
    position: relative;
}

.quotation-wrapper.show .quotation-dropdown {
    display: block;
    left: 0;
}

.quotation-dropdown {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    min-width: 700px;
    background: white;
    border: 1px solid #ced4da;
    border-top: none;
    border-radius: 0 0 4px 4px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    z-index: 1000;
}

.quotation-item {
    padding: 8px 0;
    cursor: pointer;
    width: 100%;
}

.quotation-item:hover {
    background-color: #f8f9fa;
}

.quotation-col {
    padding: 0 12px;
    color: #495057;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.quotation-col:nth-child(1) { width: 150px; }
.quotation-col:nth-child(2) { width: 250px; }
.quotation-col:nth-child(3) { width: 150px; }
.quotation-col:nth-child(4) { width: 120px; }
</style>
{% endblock %}
