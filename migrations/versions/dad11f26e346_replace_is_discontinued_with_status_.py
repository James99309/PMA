"""replace_is_discontinued_with_status_field

Revision ID: dad11f26e346
Revises: b2e3a594f642
Create Date: 2025-04-21 23:57:34.922000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import Session


# revision identifiers, used by Alembic.
revision = 'dad11f26e346'
down_revision = 'b2e3a594f642'
branch_labels = None
depends_on = None

Base = declarative_base()

class Product(Base):
    __tablename__ = 'products'
    id = sa.Column(sa.Integer, primary_key=True)
    is_discontinued = sa.Column(sa.Boolean)
    status = sa.Column(sa.String(20))


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
    
    # 数据迁移: 根据is_discontinued值设置status
    bind = op.get_bind()
    session = Session(bind=bind)
    
    # 更新现有数据
    for product in session.query(Product).all():
        if product.is_discontinued:
            product.status = 'discontinued'
        else:
            product.status = 'active'
    
    session.commit()
    
    # 删除旧字段
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_column('is_discontinued')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_discontinued', sa.BOOLEAN(), nullable=True))
    
    # 数据迁移: 根据status值还原is_discontinued
    bind = op.get_bind()
    session = Session(bind=bind)
    
    # 更新现有数据
    for product in session.query(Product).all():
        if product.status == 'discontinued':
            product.is_discontinued = True
        else:
            product.is_discontinued = False
    
    session.commit()
    
    # 删除新字段
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_column('status')
    # ### end Alembic commands ###
