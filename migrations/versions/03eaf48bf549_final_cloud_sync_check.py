
"""final_cloud_sync_check

Revision ID: 03eaf48bf549
Revises: 69da2a6b4ac1
Create Date: 2025-06-05 10:21:57.790296

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '03eaf48bf549'
down_revision = '69da2a6b4ac1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('approval_instance', schema=None) as batch_op:
        batch_op.alter_column('template_snapshot',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='创建时的模板快照',
               existing_nullable=True)
        batch_op.alter_column('template_version',
               existing_type=sa.VARCHAR(length=50),
               comment='模板版本号',
               existing_nullable=True)

    with op.batch_alter_table('approval_process_template', schema=None) as batch_op:
        batch_op.alter_column('lock_object_on_start',
               existing_type=sa.BOOLEAN(),
               comment='发起审批后是否锁定对象编辑',
               existing_nullable=True,
               existing_server_default=sa.text('true'))
        batch_op.alter_column('lock_reason',
               existing_type=sa.VARCHAR(length=200),
               comment='锁定原因说明',
               existing_nullable=True,
               existing_server_default=sa.text("'审批流程进行中，暂时锁定编辑'::character varying"))

    with op.batch_alter_table('approval_step', schema=None) as batch_op:
        batch_op.alter_column('action_type',
               existing_type=sa.VARCHAR(length=50),
               comment='步骤动作类型，如 authorization, quotation_approval',
               existing_comment='步骤动作类型，如 authorization',
               existing_nullable=True)
        batch_op.alter_column('editable_fields',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='在此步骤可编辑的字段列表',
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::json"))
        batch_op.alter_column('cc_users',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment='邮件抄送用户ID列表',
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::json"))
        batch_op.alter_column('cc_enabled',
               existing_type=sa.BOOLEAN(),
               comment='是否启用邮件抄送',
               existing_nullable=True,
               existing_server_default=sa.text('false'))

    with op.batch_alter_table('project_rating_records', schema=None) as batch_op:
        batch_op.alter_column('project_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='项目ID',
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='评分用户ID',
               existing_nullable=False)
        batch_op.alter_column('rating',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='评分(1.0-5.0)',
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_table_comment(
        existing_comment='项目评分记录表'
    )

    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.alter_column('rating',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='项目评分(1-5星)，NULL表示未评分',
               existing_nullable=True)

    with op.batch_alter_table('quotation_details', schema=None) as batch_op:
        batch_op.alter_column('implant_subtotal',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Float(),
               comment=None,
               existing_comment='植入小计：当产品品牌是和源通信时，零售价格 * 产品数量的值',
               existing_nullable=True,
               existing_server_default=sa.text('0.00'))
        batch_op.drop_index('idx_quotation_details_implant_subtotal')

    with op.batch_alter_table('quotations', schema=None) as batch_op:
        batch_op.alter_column('implant_total_amount',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Float(),
               comment=None,
               existing_comment='植入总额合计：该报价单产品明细下所有植入小计值的合计',
               existing_nullable=True,
               existing_server_default=sa.text('0.00'))
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index('idx_quotations_implant_total_amount')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('quotations', schema=None) as batch_op:
        batch_op.create_index('idx_quotations_implant_total_amount', ['implant_total_amount'], unique=False)
        batch_op.alter_column('updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('implant_total_amount',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=12, scale=2),
               comment='植入总额合计：该报价单产品明细下所有植入小计值的合计',
               existing_nullable=True,
               existing_server_default=sa.text('0.00'))

    with op.batch_alter_table('quotation_details', schema=None) as batch_op:
        batch_op.create_index('idx_quotation_details_implant_subtotal', ['implant_subtotal'], unique=False)
        batch_op.alter_column('implant_subtotal',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=12, scale=2),
               comment='植入小计：当产品品牌是和源通信时，零售价格 * 产品数量的值',
               existing_nullable=True,
               existing_server_default=sa.text('0.00'))

    with op.batch_alter_table('projects', schema=None) as batch_op:
        batch_op.alter_column('rating',
               existing_type=sa.INTEGER(),
               comment='项目评分(1-5星)，NULL表示未评分',
               existing_nullable=True)

    with op.batch_alter_table('project_rating_records', schema=None) as batch_op:
        batch_op.create_table_comment(
        '项目评分记录表',
        existing_comment=None
    )
        batch_op.alter_column('updated_at',
               existing_type=postgresql.TIMESTAMP(),
               comment='更新时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               comment='创建时间',
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('rating',
               existing_type=sa.INTEGER(),
               comment='评分(1.0-5.0)',
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               comment='评分用户ID',
               existing_nullable=False)
        batch_op.alter_column('project_id',
               existing_type=sa.INTEGER(),
               comment='项目ID',
               existing_nullable=False)

    with op.batch_alter_table('approval_step', schema=None) as batch_op:
        batch_op.alter_column('cc_enabled',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='是否启用邮件抄送',
               existing_nullable=True,
               existing_server_default=sa.text('false'))
        batch_op.alter_column('cc_users',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment=None,
               existing_comment='邮件抄送用户ID列表',
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::json"))
        batch_op.alter_column('editable_fields',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment=None,
               existing_comment='在此步骤可编辑的字段列表',
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::json"))
        batch_op.alter_column('action_type',
               existing_type=sa.VARCHAR(length=50),
               comment='步骤动作类型，如 authorization',
               existing_comment='步骤动作类型，如 authorization, quotation_approval',
               existing_nullable=True)

    with op.batch_alter_table('approval_process_template', schema=None) as batch_op:
        batch_op.alter_column('lock_reason',
               existing_type=sa.VARCHAR(length=200),
               comment=None,
               existing_comment='锁定原因说明',
               existing_nullable=True,
               existing_server_default=sa.text("'审批流程进行中，暂时锁定编辑'::character varying"))
        batch_op.alter_column('lock_object_on_start',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='发起审批后是否锁定对象编辑',
               existing_nullable=True,
               existing_server_default=sa.text('true'))

    with op.batch_alter_table('approval_instance', schema=None) as batch_op:
        batch_op.alter_column('template_version',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='模板版本号',
               existing_nullable=True)
        batch_op.alter_column('template_snapshot',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               comment=None,
               existing_comment='创建时的模板快照',
               existing_nullable=True)

    # ### end Alembic commands ###